{"version":3,"file":"public/js/app.js","sources":["app/app.coffee","app/initialize.coffee","app/router.coffee","app/views/level1.coffee","app/views/level2.coffee","app/views/level3.coffee","app/views/level4.coffee","app/views/templates/level1.jade","app/views/templates/level2.jade","app/views/templates/level3.jade","app/views/templates/level4.jade"],"names":[],"mappings":"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","sourcesContent":["AppRouter = require \"./router\"\n\nApplication =\n  initialize: (callback) ->\n    FastClick.attach(document.body)\n    @router = new AppRouter()\n    callback()\n\nmodule.exports = Application\n\n","app = require \"app\"\n\n$ ->\n  app.initialize ->\n    Backbone.history.start()\n","class AppRouter extends Backbone.Router\n\n  initialize: ->\n    @viewstack = new Backbone.ViewStack\n      viewPath: \"views/\"\n      el: \"#views\"\n      isLinear: false\n      bodyClass: \".view-body\"\n\n    # Example of manually creating a view rather than having it required\n    # by the view stack.\n    @viewstack.create(\"level4\", (require \"views/level4\"), {})\n\n  routes:\n    \"level1\":       \"level1\"\n    \"level2\":       \"level2\"\n    \"level3\":       \"level3\"\n    \"zoom\":         \"zoom\"\n    \"fade\":         \"fade\"\n\n    \"*default\":     \"level1\"\n\n  level1: ->\n    @viewstack.show \"level1\"\n\n  level2: ->\n    @viewstack.show \"level2\"\n\n  level3: ->\n    @viewstack.show \"level3\"\n\n  zoom: ->\n    @viewstack.show \"level4\", transition: \"zoom\"\n\n  fade: ->\n    @viewstack.show \"level4\", transition: \"fade\"\n\n\n\nmodule.exports = AppRouter\n","app = require(\"app\")\n\nclass Level1View extends Backbone.View\n\n  template: require \"./templates/level1\"\n\n  initialize: ->\n    @$el.html(@template())\n\n  show: ->\n    app.router.navigate(\"level1\")\n    console.log \"Show Level 1\"\n\n  hide: ->\n    console.log \"Hide Level 1\"\n\nmodule.exports = Level1View\n","app = require(\"app\")\n\nclass Level2View extends Backbone.View\n\n  template: require \"./templates/level2\"\n  stack: [\"level1\", \"level2\"]\n\n  initialize: ->\n    @$el.html(@template())\n\n  show: ->\n    app.router.navigate(\"level2\", true)\n    console.log \"Show Level 2\"\n\n  hide: ->\n    console.log \"Hide Level 2\"\n\nmodule.exports = Level2View\n","app = require(\"app\")\n\nclass Level3View extends Backbone.View\n\n  template: require \"./templates/level3\"\n  stack: [\"level1\", \"level2\", \"level3\"]\n\n  initialize: ->\n    @$el.html(@template())\n\n  show: ->\n    app.router.navigate(\"level3\")\n    console.log \"Show Level 3\"\n\n  hide: ->\n    console.log \"Hide Level 3\"\n\nmodule.exports = Level3View\n","app = require(\"app\")\n\nclass Level4View extends Backbone.View\n\n  template: require \"./templates/level4\"\n\n  initialize: ->\n    @$el.html(@template())\n\n  show: (options) ->\n    # Because the route and transition are equal, we'll cheat and use the\n    # transitions name.\n    app.router.navigate(options.transition, true)\n    @$(\".name\").html options.transition\n\n    console.log \"Show Level 4\"\n\n  hide: ->\n    console.log \"Hide Level 4\"\n\nmodule.exports = Level4View\n","var __templateData = function anonymous(locals) {\nvar buf = [];\nbuf.push(\"<div class=\\\"view-head nav-bar\\\"><div class=\\\"nav-bar-button-left\\\"><div class=\\\"icon icon-menu\\\"></div></div><div class=\\\"nav-bar-title\\\">Level 1</div><div class=\\\"nav-bar-button-right\\\"></div></div><div class=\\\"view-body\\\"><div class=\\\"content\\\"><p>This view is at the start (or bottom) of the stack. You won't be able to pop this view, because there is nothing underneath. This means that manually swiping on the left part of the screen will have no affect.</p><p>All new views will automatically push onto the stack, unless they already exist within it.</p><a href=\\\"#level2\\\" class=\\\"button\\\">Go to Level 2</a><a href=\\\"#level3\\\"><small>Skip to Level 3</small></a></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function anonymous(locals) {\nvar buf = [];\nbuf.push(\"<div class=\\\"view-head nav-bar\\\"><a href=\\\"#level1\\\" class=\\\"nav-bar-button-left\\\">Back</a><div class=\\\"nav-bar-title\\\">Level 2</div></div><div class=\\\"view-body\\\"><div class=\\\"content\\\"><p>This view is automatically pushed onto the view. You can manually swipe back to the last view.</p><p>Because this view declares a stack, the stack is created on initialization. This means you can refresh the page and still manually swipe back.</p><pre>stack: [\\\"level1\\\", \\\"level2\\\"]</pre><a href=\\\"#level3\\\" class=\\\"button\\\">Go to level 3</a><a href=\\\"#fade\\\" class=\\\"button\\\">Fade to popover</a><a href=\\\"#zoom\\\" class=\\\"button\\\">Zoom to popover</a></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function anonymous(locals) {\nvar buf = [];\nbuf.push(\"<div class=\\\"view-head nav-bar\\\"><a href=\\\"#level2\\\" class=\\\"nav-bar-button-left\\\">Back</a><div class=\\\"nav-bar-title\\\">Level 3</div></div><div class=\\\"view-body\\\"><div class=\\\"content\\\"><p>The stack is clever enough to figure out whether to pop the view based on the occurance of the new view in the view stack. For this reason, if we jump back to Level 1, the pop will naturally occur without any extra setup.</p><p>If you skipped from Level 1 to 3, Level 2 has not been created. This isn't a problem, though, because Level 3 declares a stack in just the same way as 2. This means that navigating to Level 2 will still pop the view.</p><small><pre>stack: [\\\"level1\\\", \\\"level2\\\", \\\"level3\\\"]</pre></small><a href=\\\"#level1\\\" class=\\\"button\\\">Go all the way back to Level 1</a></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function anonymous(locals) {\nvar buf = [];\nbuf.push(\"<div class=\\\"view-body\\\"><div class=\\\"content\\\"><h1 class=\\\"name\\\">Type</h1><p>If you show a new view and set a transition, the stack assumes the view should leave the same way it entered.</p><code><pre>viewstack.show(\\\"name\\\", {\\n  transition: \\\"<span class=\\\"name\\\">type</span>\\\"\\n})\\n</pre></code><a href=\\\"#level2\\\" class=\\\"button\\\">Close</a></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}"]}